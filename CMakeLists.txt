cmake_minimum_required(VERSION 3.15)
project(LunaLuxEngine)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
        message(ERROR,"must use Visual Studios Compiler to compile on Windows")
    endif()
endif()

include_directories(${PROJECT_SOURCE_DIR}/Includes STATIC IMPORTED)
include_directories(${PROJECT_SOURCE_DIR}/src/Physics_src STATIC)
include_directories(${PROJECT_SOURCE_DIR}/src/Core_src STATIC)
include_directories(${PROJECT_SOURCE_DIR}/src/Libc_src STATIC)
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    find_package(Vulkan REQUIRED)
    include_directories(C:/VulkanSDK/1.2.131.2/Include STATIC)
    link_directories(${Vulkan_LIBRARY})
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    add_compile_definitions(GLEW_STATIC)
    find_package(GLEW REQUIRED)
    find_package(OpenGL REQUIRED)
    find_package(Vulkan REQUIRED)
    find_package(X11 REQUIRED)
    link_directories(${X11_LIBRARIES})
    link_directories(${Vulkan_LIBRARY})
    link_directories(${GLEW_LIBRARIES})
    link_directories(${OPENGL_LIBRARIES})
endif()

add_library(LunaLuxEnginePhysicsLib src/Physics_src/LunaLuxEnginePhysics.h src/Physics_src/LunaLuxEnginePhysics.cpp)
add_library(LunaLuxEngineCoreLib src/Core_src/LunaLuxEngineCore.cpp src/Core_src/LunaLuxEngineCore.h src/Core_src/render/IRender.h src/Core_src/window/Window.h src/Core_src/window/Window.cpp src/Core_src/render/DirectX.cpp src/Core_src/render/DirectX.h src/Core_src/fs/Reader.h src/Core_src/render/Shader.h src/Core_src/render/Shader.cpp src/Core_src/utils/Math.h src/Core_src/utils/Math.cpp src/Core_src/render/Buffer.h src/Core_src/render/Buffer.cpp src/Core_src/render/Opengl.h src/Core_src/render/Opengl.cpp)
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
    target_link_libraries(LunaLuxEngineCoreLib LunaLuxEnginePhysicsLib ${Vulkan_LIBRARY})
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    target_link_libraries(LunaLuxEngineCoreLib LunaLuxEnginePhysicsLib ${X11_LIBRARIES} ${Vulkan_LIBRARY} ${GLEW_LIBRARIES} ${OPENGL_LIBRARIES})
endif()

add_executable(TestGame src/Game_src/test.cpp src/Game_src/Game.cpp src/Game_src/Game.h)
target_link_libraries(TestGame LunaLuxEngineCoreLib)
